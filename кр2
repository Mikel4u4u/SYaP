(defun sd (n m r)
           (cond ((= m 1) (1+ r))
                 ((zerop (mod n m)) (sd n (1- m) (+ m r)))
                 ((sd n (1- m) r))
               ))
 


  (defun next-fib (curr)     
        (if (= (* curr 2) (sd curr curr 0))  curr
          )    
    
)       
      
(let ((curr 4) )   
(defun generator  nil
     

     ( if (eq  ( next-fib curr) nil ) ( generator )  curr )
    

)  
) 
 
 
(print (generator))
(print (generator))
(print (generator))
(print (generator))




